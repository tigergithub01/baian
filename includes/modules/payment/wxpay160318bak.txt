<?php

/**
 * ECSHOP 微信支付插件
 * ============================================================================
 * * 版权所有 2005-2012 上海易蔚电子商务有限公司，并保留所有权利。
 * 网站地址: http://www.caiya.com；
 * ----------------------------------------------------------------------------
 * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和
 * 使用；不允许对程序代码以任何形式任何目的的再发布。
 * ============================================================================
 * $Author: jeff lew $
 * $Id: wxpay.php 17217 2014-04-30 06:29:08Z jeff lew $
 */

if (!defined('IN_ECS'))
{
    die('Hacking attempt');
}

$payment_lang = ROOT_PATH . 'languages/' .$GLOBALS['_CFG']['lang']. '/payment/wxpay.php';

require_once "wxpay/WxPay.Api.php";
require_once 'wxpay/WxPay.Notify.php';
require_once "wxpay/WxPay.JsApiPay.php";

if (file_exists($payment_lang))
{
    global $_LANG;

    include_once($payment_lang);
}

/* 模块的基本信息 */
if (isset($set_modules) && $set_modules == TRUE)
{
    $i = isset($modules) ? count($modules) : 0;

    /* 代码 */
    $modules[$i]['code']    = basename(__FILE__, '.php');

    /* 描述对应的语言项 */
    $modules[$i]['desc']    = 'wxpay_desc';

    /* 是否支持货到付款 */
    $modules[$i]['is_cod']  = '0';

    /* 是否支持在线支付 */
    $modules[$i]['is_online']  = '1';

    /* 作者 */
    $modules[$i]['author']  = 'CAIYA TEAM';

    /* 网址 */
    $modules[$i]['website'] = 'http://wx.qq.com';

    /* 版本号 */
    $modules[$i]['version'] = '0.0.1';

	/* 配置信息 */
    $modules[$i]['config']  = array(
//         array('name' => 'wxpay_appid',           'type' => 'text',   'value' => ''),
//         array('name' => 'wxpay_appsecret',       'type' => 'text',   'value' => ''),
//         array('name' => 'wxpay_mchid',        'type' => 'text',   'value' => ''),
//         array('name' => 'wxpay_key',       'type' => 'text',   'value' => ''),
    );

    return;
}

/**
 * 类
 */
class wxpay
{

    /**
     * 构造函数
     *
     * @access  public
     * @param
     *
     * @return void
     */
    

    function __construct()
    {
    	$this->wxpay();
    }
    
    /**
     * 构造函数
     *
     * @access  public
     * @param
     *
     * @return void
     */
    function wxpay()
    {
    }
    

    /**
     * 生成支付代码
     * @param   array   $order      订单信息
     * @param   array   $payment    支付方式信息
     */
    function get_code($order, $payment)
    {
        if (!defined('EC_CHARSET'))
        {
            $charset = 'utf-8';
        }
        else
        {
            $charset = EC_CHARSET;
        }
		
        /* if(!$this->is_show_pay($_SERVER['HTTP_USER_AGENT'])){
        	return '';
        } */
        
        
        //①、获取用户openid
        $tools = new JsApiPay();
        $openId = $tools->GetOpenid();        
        
        //②、统一下单
        $input = new WxPayUnifiedOrder();
        /* $input->SetBody($order['order_sn']);
        $input->SetAttach($order['order_sn']);
        $input->SetOut_trade_no($order['order_sn']);
        $input->SetTotal_fee(intval($order['order_amount'] * 100));
        $input->SetTime_start(date("YmdHis"));
        $input->SetTime_expire(date("YmdHis", time() + 600));
        $input->SetGoods_tag($order['order_sn'] . '_' . $order['log_id']);
        $input->SetNotify_url(return_url(basename(__FILE__, '.php')));
        $input->SetTrade_type("JSAPI");
        $input->SetOpenid($openId);
        $order = WxPayApi::unifiedOrder($input); */
        $input = new WxPayUnifiedOrder();
        $input->SetBody("test");
        $input->SetAttach("test");
        $input->SetOut_trade_no(WxPayConfig::MCHID.date("YmdHis"));
        $input->SetTotal_fee("1");
        $input->SetTime_start(date("YmdHis"));
        $input->SetTime_expire(date("YmdHis", time() + 600));
        $input->SetGoods_tag("test");
        $input->SetNotify_url("http://paysdk.weixin.qq.com/example/notify.php");
        $input->SetTrade_type("JSAPI");
        $input->SetOpenid($openId);
        $order = WxPayApi::unifiedOrder($input);
        
//         echo '<font color="#f00"><b>统一下单支付单信息</b></font><br/>';
//         printf_info($order);
        $jsApiParameters = $tools->GetJsApiParameters($order);
        
        
////////////////////////////////////////

        $button = <<<EOT
<div style="text-align:center"><input class="s-btn1" type="submit" value="微信安全支付" onclick="callpay_{$order['order_sn']}()" /></div>
<script type="text/javascript">
// 当微信内置浏览器完成内部初始化后会触发WeixinJSBridgeReady事件。
// 其实中间部分可以写成一个事件，点击某个按钮触发
	function jsApiCall_{$order['order_sn']}()
	{
		WeixinJSBridge.invoke(
			'getBrandWCPayRequest',
			<?php echo $jsApiParameters; ?>,
			function(res){
				WeixinJSBridge.log(res.err_msg);
				alert(res.err_code+res.err_desc+res.err_msg);
			}
		);
	}

	function callpay_{$order['order_sn']}()
	{
		if (typeof WeixinJSBridge == "undefined"){
		    if( document.addEventListener ){
		        document.addEventListener('WeixinJSBridgeReady', jsApiCall_{$order['order_sn']}, false);
		    }else if (document.attachEvent){
		        document.attachEvent('WeixinJSBridgeReady', jsApiCall_{$order['order_sn']}); 
		        document.attachEvent('onWeixinJSBridgeReady', jsApiCall_{$order['order_sn']});
		    }
		}else{
		    jsApiCall_{$order['order_sn']}();
		}
	}	            		
</script>

EOT;

        return $button;
    }
    

    /**
     * 响应操作
     */
    function respond()
    {
        $payment    = get_payment('wxpay');
        
        
        
        $notify = new PayNotifyCallBack();
        $notify->Handle(false);        
        
        if($notify->GetReturn_code() == 'SUCCESS'){
        	$arr = $notify ->GetValues();
        	
	        /*取返回参数*/
	        $order_sn   = $arr['out_trade_no'];
	
	        $log_id = get_order_id_by_sn($order_sn);
	
	        /* 如果trade_state大于0则表示支付失败 */
	        if ($arr['trade_state'] > 0)
	        {
	            return false;
	        }
	
	        /* 检查支付的金额是否相符 */
	        if (!check_money($log_id, $arr['total_fee'] / 100))
	        {
	            return false;
	        }
	
			$order_paid($log_id);
			
			return true;
        }else{
        	return false;
        }
    }

	
	
	
	 /**
	 * 是否支持微信支付
	 * @return bool
	 */
	public function is_show_pay($agent) {
		$ag1  = strstr($agent,"MicroMessenger");
		$ag2 = explode("/",$ag1);
		$ver = floatval($ag2[1]);
		if ( $ver < 5.0 || empty($aid) ){
			return false;
    	}else{
    		return true;
    	}
	}   
}


class PayNotifyCallBack extends WxPayNotify
{
	//查询订单
	public function Queryorder($transaction_id)
	{
		$input = new WxPayOrderQuery();
		$input->SetTransaction_id($transaction_id);
		$result = WxPayApi::orderQuery($input);
		Log::DEBUG("query:" . json_encode($result));
		if(array_key_exists("return_code", $result)
				&& array_key_exists("result_code", $result)
				&& $result["return_code"] == "SUCCESS"
				&& $result["result_code"] == "SUCCESS")
		{
			return true;
		}
		return false;
	}

	//重写回调处理函数
	public function NotifyProcess($data, &$msg)
	{
		Log::DEBUG("call back:" . json_encode($data));
		$notfiyOutput = array();

		if(!array_key_exists("transaction_id", $data)){
			$msg = "输入参数不正确";
			return false;
		}
		//查询订单，判断订单真实性
		if(!$this->Queryorder($data["transaction_id"])){
			$msg = "订单查询失败";
			return false;
		}
		
		
		return true;
	}
}

?>